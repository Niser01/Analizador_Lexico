programa -> sentencia programa_Funcion
programa_Funcion -> EoL programa | programa | error

sentencia -> declaracion | bloque_programa | EoL | asignacion | lectura | escritura | condicional | casos | mientras | repita | para | funcion | procedimiento | registro | arreglo | error

sentencia_acciones -> EoL | asignacion | lectura | escritura | condicional | casos | mientras | repita | para | arreglo | llamar | error

llamar -> 'llamar' llamar_procedimiento | error
llamar_procedimiento -> EoL | identificador expresion | error

declaracion -> 'cadena' palabras_reservadas '[' 'entero' ']' identificador | palabras_reservadas identificador declaracion_Ciclo EoL | error

declaracion_Ciclo -> ',' declaracion_Ciclo2 | error
declaracion_Ciclo2 -> palabras_reservadas identificador | identificador | error

asignacion -> identificador '<-' expresion EoL | error

lectura -> 'lea' lectura_Ciclo EoL | error
lectura_Ciclo -> identificador token lectura_Ciclo | identificador lectura_Ciclo | token lectura_Ciclo | palabras_reservadas lectura_Ciclo | error

escritura -> 'escriba' escritura_Ciclo EoL | error
escritura_Ciclo -> identificador token palabras_reservadas escritura_Ciclo | identificador escritura_Ciclo | token escritura_Ciclo | palabras_reservadas escritura_Ciclo | error

identificador -> 'id'

expresion -> expresion_Ciclo
expresion_Ciclo -> factor_expresion expresion_Ciclo | error

factor_expresion -> '(' expresion ')' | '[' expresion ']' | token | identificador | palabras_reservadas | error

palabras_reservadas -> 'entero' | 'real' | 'booleano' | 'caracter' | 'cadena' | 'verdadero' | 'falso' | 'y' | 'u' | 'mod' | 'var' | 'retorne' | 'div'

EoL -> 'newline'

token -> ',' | '<-' | 'tkn_real' | 'tkn_integer' | 'tkn_str' | '(' | '[' | ']' | ')' | '.' | ':' | '+' | '-' | '*' | '/' | '^' | '<>' | '<=' | '<' | '>=' | '>' | '=' | 'tkn_char'

condicional -> 'si' expresion 'entonces' sentencia_condicional 'fin si'
sentencia_condicional -> acciones_condicional sentencia_condicional_Ciclo | acciones_condicional
acciones_condicional -> sentencia_acciones acciones_condicional | error | e
sentencia_condicional_Sino -> 'sino' acciones_condicional 

casos -> 'caso' valor_caso ':' bloque_codigo_caso 'sino' bloque_codigo_caso 'fin caso'
valor_caso -> id_casos_Ciclo valor_caso_tail | error
valor_caso_tail -> ',' id_casos_Ciclo valor_caso_tail | EoL
id_casos_Ciclo -> 'tkn_integer' | 'tkn_real'

bloque_codigo_caso -> sentencia_acciones | EoL | error

mientras -> 'mientras' expresion 'haga' ciclo_mientras 'fin mientras'
ciclo_mientras -> sentencia_acciones ciclo_mientras | EoL | error

repita -> 'repita' ciclo_repita 'hasta' expresion
ciclo_repita -> sentencia_acciones ciclo_repita | EoL | error

para -> 'para' expresion 'hasta' expresion 'haga' ciclo_para 'fin para'
ciclo_para -> sentencia_acciones ciclo_para | EoL | error

procedimiento -> 'procedimiento' identificador procedimiento_Ciclo 'inicio' acciones_procedimiento 'fin'
procedimiento_Ciclo -> acciones_procedimiento procedimiento_Ciclo | EoL | error

acciones_procedimiento -> sentencia_acciones acciones_procedimiento | EoL | error

funcion -> 'funcion' identificador funcion_Ciclo 'inicio' acciones_funcion 'fin'
funcion_Ciclo -> parametros_ciclo_funcion ':' palabras_reservadas | parametros_ciclo_funcion | error
parametros_ciclo_funcion -> '(' declaracion ')' | declaracion | error

acciones_funcion -> sentencia_acciones acciones_funcion | EoL | error

registro -> 'registro' identificador registro_Ciclo 'fin'
registro_Ciclo -> declaracion registro_Ciclo | EoL | error

arreglo -> 'arreglo' arreglo_Def
arreglo_Def -> '[' 'tkn_integer' ']' 'de' palabras_reservadas | identificador | error

bloque_programa -> 'inicio' bloque_programa_Ciclo 'fin'
bloque_programa_Ciclo -> sentencia_acciones bloque_programa_Ciclo | EoL | error
